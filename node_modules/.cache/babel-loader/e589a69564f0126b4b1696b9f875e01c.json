{"ast":null,"code":"var _jsxFileName = \"/Users/emimantilla/Desktop/js411/front-end-recipe-book/src/components/AddRecipePage.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  paper: {\n    margin: \"auto\",\n    padding: 50,\n    width: 650\n  },\n  title: {\n    marginBottom: 8\n  },\n  textField: {\n    display: \"block\",\n    marginBottom: 20\n  },\n  button: {\n    marginRight: 20\n  }\n});\n\nfunction AddRecipePage(props) {\n  _s();\n\n  const classes = useStyles();\n  let history = useHistory(); //defined to push a new entry onto the history stack\n\n  const [recipe, setRecipe] = useState({\n    recipeName: \"\",\n    measurement: \"\",\n    ingredient: \"\",\n    addtlInfo: \"\",\n    instructionsBox: \"\"\n  });\n\n  function handleInputChanges(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setRecipe(previousRecipe => ({ ...previousRecipe,\n      [name]: value\n    }));\n  }\n\n  function handleFormSubmit(event) {\n    //when handleFormSubmit is clicked it will add the recipe to the AddRecipePage function\n    event.preventDefault(); //prevent from page to reload\n\n    props.addRecipe(recipe).then(() => history.push(\"/recipes\")); //addRecipe is a function in actions/recipeActions which makes a API command to   return the updated recipe list\n  }\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    elevation: 3,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.recipeName,\n      variant: \"h5\",\n      children: \"Add a new recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        className: classes.textField,\n        fullWidth: true,\n        name: \"recipeName\",\n        label: \"Recipe Name\",\n        variant: \"outlined\",\n        value: recipe.recipeName,\n        onChange: handleInputChanges\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.textField,\n        fullWidth: true,\n        name: \"measurement\",\n        label: \"Measurement\",\n        variant: \"outlined\",\n        value: recipe.measurement,\n        onChange: handleInputChanges\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.textField,\n        fullWidth: true,\n        name: \"ingredient\",\n        label: \"Ingredient\",\n        variant: \"outlined\",\n        value: recipe.ingredient,\n        onChange: handleInputChanges\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.textField,\n        fullWidth: true,\n        name: \"addtlInfo\",\n        label: \"Additional Info\",\n        variant: \"outlined\",\n        value: recipe.addtlInfo,\n        onChange: handleInputChanges\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.textField,\n        fullWidth: true,\n        name: \"instructionsBox\",\n        label: \"Instructions\",\n        variant: \"outlined\",\n        value: recipe.instructionsBox,\n        onChange: handleInputChanges\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: classes.button,\n          variant: \"outlined\",\n          color: \"primary\",\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          component: Link,\n          to: \"/recipes\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddRecipePage, \"xrqbD5qHgCI0lxggkFdPAO5hFAU=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = AddRecipePage;\nexport default AddRecipePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRecipePage\");","map":{"version":3,"sources":["/Users/emimantilla/Desktop/js411/front-end-recipe-book/src/components/AddRecipePage.js"],"names":["useState","makeStyles","Paper","TextField","Button","Typography","Link","useHistory","useStyles","paper","margin","padding","width","title","marginBottom","textField","display","button","marginRight","AddRecipePage","props","classes","history","recipe","setRecipe","recipeName","measurement","ingredient","addtlInfo","instructionsBox","handleInputChanges","event","name","value","target","previousRecipe","handleFormSubmit","preventDefault","addRecipe","then","push"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  paper: {\n    margin: \"auto\",\n    padding: 50,\n    width: 650,\n  },\n  title: {\n    marginBottom: 8,\n  },\n  textField: {\n    display: \"block\",\n    marginBottom: 20,\n  },\n  button: {\n    marginRight: 20,\n  },\n});\n\nfunction AddRecipePage(props) { \n  const classes = useStyles(); \n  let history = useHistory(); //defined to push a new entry onto the history stack\n  const [recipe, setRecipe] = useState({ recipeName: \"\", measurement: \"\", ingredient: \"\", addtlInfo: \"\", instructionsBox: \"\" });\n\n  function handleInputChanges(event) {\n    const { name, value } = event.target;\n\n    setRecipe((previousRecipe) => ({\n      ...previousRecipe,\n      [name]: value,\n    }));\n  }\n\n  function handleFormSubmit(event) { //when handleFormSubmit is clicked it will add the recipe to the AddRecipePage function\n    event.preventDefault(); //prevent from page to reload\n\n    props.addRecipe(recipe).then(() => history.push(\"/recipes\")); //addRecipe is a function in actions/recipeActions which makes a API command to   return the updated recipe list\n  }\n\n  return (\n    <Paper className={classes.paper} elevation={3}>\n      <Typography className={classes.recipeName} variant=\"h5\">\n        Add a new recipe\n      </Typography>\n      <form onSubmit={handleFormSubmit}>\n        <TextField\n          required\n          className={classes.textField}\n          fullWidth\n          name=\"recipeName\"\n          label=\"Recipe Name\"\n          variant=\"outlined\"\n          value={recipe.recipeName}\n          onChange={handleInputChanges}\n        />\n        <TextField\n          className={classes.textField}\n          fullWidth\n          name=\"measurement\"\n          label=\"Measurement\"\n          variant=\"outlined\"\n          value={recipe.measurement}\n          onChange={handleInputChanges}\n        />\n        <TextField\n          className={classes.textField}\n          fullWidth\n          name=\"ingredient\"\n          label=\"Ingredient\"\n          variant=\"outlined\"\n          value={recipe.ingredient}\n          onChange={handleInputChanges}\n        />\n        <TextField\n          className={classes.textField}\n          fullWidth\n          name=\"addtlInfo\"\n          label=\"Additional Info\"\n          variant=\"outlined\"\n          value={recipe.addtlInfo}\n          onChange={handleInputChanges}\n        />\n        <TextField\n          className={classes.textField}\n          fullWidth\n          name=\"instructionsBox\"\n          label=\"Instructions\"\n          variant=\"outlined\"\n          value={recipe.instructionsBox}\n          onChange={handleInputChanges}\n        />\n        <div>\n          <Button\n            className={classes.button}\n            variant=\"outlined\"\n            color=\"primary\"\n            type=\"submit\"\n          >\n            Save\n          </Button>\n\n          <Button variant=\"outlined\" component={Link} to={\"/recipes\"}>\n            Cancel\n          </Button>\n\n        </div>\n      </form>\n    </Paper>\n  );\n}\n\nexport default AddRecipePage;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/emimantilla/Desktop/js411/front-end-recipe-book/src/components/AddRecipePage.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddIngredients from \"./AddIngredients\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  paper: {\n    margin: \"auto\",\n    padding: 50,\n    width: 650\n  },\n  title: {\n    marginBottom: 8\n  },\n  textField: {\n    display: \"block\",\n    marginBottom: 20\n  },\n  button: {\n    marginRight: 20\n  },\n  container: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\"\n  }\n});\n\nfunction AddRecipePage(props) {\n  _s();\n\n  const classes = useStyles();\n  let history = useHistory(); //defined to push a new entry onto the history stack\n\n  const [recipe, setRecipe] = useState({\n    recipeName: \"\",\n    instructionsBox: \"\",\n    ingredients: [1]\n  });\n\n  function handleInputChanges(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setRecipe(previousRecipe => ({ ...previousRecipe,\n      [name]: value\n    }));\n  }\n\n  function handleFormSubmit(event) {\n    //when handleFormSubmit is clicked it will add the recipe to the AddRecipePage function\n    event.preventDefault(); //prevent from page to reload\n\n    props.addRecipe(recipe) //.addRecipe is a black box function\n    .then(() => history.push(\"/recipes\")); //addRecipe is a function in actions/recipeActions which runs the POST API command and returns if postRecipeSuccess was a success or caused an error. This line of code is saying, run the POST API command to add the new recipe and once thats done then push it into history stack in \"/recipes\"\n  }\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    elevation: 3,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.recipeName,\n      variant: \"h5\",\n      children: \"Add a new recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        className: classes.textField,\n        fullWidth: true,\n        name: \"recipeName\",\n        label: \"Recipe Name\",\n        variant: \"outlined\",\n        value: recipe.recipeName,\n        onChange: handleInputChanges\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddIngredients, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.textField,\n        fullWidth: true,\n        name: \"instructionsBox\",\n        label: \"Instructions\",\n        variant: \"outlined\",\n        value: recipe.instructionsBox,\n        onChange: handleInputChanges\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: classes.button,\n          variant: \"outlined\",\n          color: \"primary\",\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          component: Link,\n          to: \"/recipes\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddRecipePage, \"iBqthHVDapqe6LTQE8Abf20rwXk=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = AddRecipePage;\nexport default AddRecipePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRecipePage\");","map":{"version":3,"sources":["/Users/emimantilla/Desktop/js411/front-end-recipe-book/src/components/AddRecipePage.js"],"names":["useState","makeStyles","Link","useHistory","Button","Grid","Paper","TextField","Typography","AddIngredients","useStyles","paper","margin","padding","width","title","marginBottom","textField","display","button","marginRight","container","flexDirection","flexWrap","AddRecipePage","props","classes","history","recipe","setRecipe","recipeName","instructionsBox","ingredients","handleInputChanges","event","name","value","target","previousRecipe","handleFormSubmit","preventDefault","addRecipe","then","push"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\n import AddIngredients from \"./AddIngredients\";\n\n\nconst useStyles = makeStyles({\n  paper: {\n    margin: \"auto\",\n    padding: 50,\n    width: 650,\n  },\n  title: {\n    marginBottom: 8,\n  },\n  textField: {\n    display: \"block\",\n    marginBottom: 20,\n  },\n  button: {\n    marginRight: 20,\n  },\n  container: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n  },\n});\n\nfunction AddRecipePage(props) {\n  const classes = useStyles();\n  let history = useHistory(); //defined to push a new entry onto the history stack\n  const [recipe, setRecipe] = useState({ recipeName: \"\", instructionsBox: \"\", ingredients: [1] ,  })\n\n  function handleInputChanges(event) {\n    const { name, value } = event.target;\n\n    setRecipe((previousRecipe) => ({\n      ...previousRecipe,\n      [name]: value,\n    }));\n  }\n\n  function handleFormSubmit(event) { //when handleFormSubmit is clicked it will add the recipe to the AddRecipePage function\n    event.preventDefault(); //prevent from page to reload\n\n    props.addRecipe(recipe) //.addRecipe is a black box function\n      .then(() => history.push(\"/recipes\")); //addRecipe is a function in actions/recipeActions which runs the POST API command and returns if postRecipeSuccess was a success or caused an error. This line of code is saying, run the POST API command to add the new recipe and once thats done then push it into history stack in \"/recipes\"\n  }\n\n  return (\n    <Paper className={classes.paper} elevation={3}>\n      <Typography className={classes.recipeName} variant=\"h5\">\n        Add a new recipe\n      </Typography>\n      <form onSubmit={handleFormSubmit}>\n        <TextField\n          required\n          className={classes.textField}\n          fullWidth\n          name=\"recipeName\"\n          label=\"Recipe Name\"\n          variant=\"outlined\"\n          value={recipe.recipeName}\n          onChange={handleInputChanges}\n        />\n       \n        <AddIngredients />\n        \n        <TextField\n          className={classes.textField}\n          fullWidth\n          name=\"instructionsBox\"\n          label=\"Instructions\"\n          variant=\"outlined\"\n          value={recipe.instructionsBox}\n          onChange={handleInputChanges}\n        />\n        <div>\n          <Button\n            className={classes.button}\n            variant=\"outlined\"\n            color=\"primary\"\n            type=\"submit\"\n          >\n            Save\n          </Button>\n\n          <Button variant=\"outlined\" component={Link} to={\"/recipes\"}>\n            Cancel\n          </Button>\n\n        </div>\n      </form>\n    </Paper>\n  );\n}\n\nexport default AddRecipePage;\n"]},"metadata":{},"sourceType":"module"}